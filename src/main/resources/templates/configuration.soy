{namespace plugin.helmPr}

/**
 * @param project current Project
 * @param configuration current Configuration
 */
{template .projectConfigurationPage}
<html>
<head>
    <meta name="decorator" content="bitbucket.project.settings">
    <meta name="projectKey" content="{$project.key}">
    <meta name="activeTab" content="helm-pr-project-configuration">
    <title>Helm PR Configuration for {$project.name}</title>
    {webResourceManager_requireResource('com.github.jonasrutishauser.bitbucket.helm-pr-bitbucket-plugin:helm-configuration-js')}
</head>
<body>
<div id="content">
	{call .configurationForm}
		{param configuration: $configuration /}
	{/call}
</div>
</body>
</html>
{/template}

/**
 * @param repository current Repository
 * @param configuration current Configuration
 */
{template .repositoryConfigurationPage}
<html>
<head>
    <meta name="decorator" content="bitbucket.repository.settings">
    <meta name="projectKey" content="{$repository.project.key}">
	<meta name="repositorySlug" content="{$repository.slug}">
    <meta name="activeTab" content="helm-pr-repo-configuration">
    <title>Helm PR Configuration for {$repository.project.name} / {$repository.name}</title>
    {webResourceManager_requireResource('com.github.jonasrutishauser.bitbucket.helm-pr-bitbucket-plugin:helm-configuration-js')}
</head>
<body>
<div id="content">
	{call .configurationForm}
		{param configuration: $configuration /}
	{/call}
</div>
</body>
</html>
{/template}

/**
 * @param configuration current Configuration
 */
{template .configurationForm private="true"}
	<h2>Helm PR Configuration</h2>
	{call aui.form.form}
		{param action: '#' /}
		{param content}
			{call aui.form.selectField}
				{param id: 'active' /}
				{param value: $configuration.active /}
				{param labelContent: 'Active' /}
				{param options: [
					[ 'text': 'Inherited', 'value': 'inherited' ],
					[ 'text': 'Enabled', 'value': true ],
					[ 'text': 'Disabled', 'value': false ]
				] /}
				{param isRequired: true /}
			{/call}
			<p></p>
			{call aui.form.fieldset}
				{param legendContent}
					{call aui.form.label}
						{param content}
							<aui-label for="overwritten">Overwrite</aui-label>
						{/param}
						{param isRequired: true /}
					{/call}
				{/param}
				{param isGroup : true /}
				{param id : 'overwrite' /}
				{param content}
					<aui-toggle id="overwritten" name="overwritten" label="overwrite global configuration" {if $configuration.overwritten}checked="checked"{/if}></aui-toggle>
				{/param}
			{/call}
			{call .configurationFormContent}
				{param configuration: $configuration /}
				{param isDisabled: not $configuration.overwritten /}
			{/call}
		{/param}
	{/call}
{/template}

/**
 * @param configuration current Configuration
 * @param? isDisabled
 */
{template  .configurationFormContent private="true"}
	{call aui.form.textareaField}
		{param id: 'default-values' /}
		{param labelContent: 'Default values' /}
		{param value: $configuration.defaultValues /}
		{param placeholderText: 'Default values as yaml here...' /}
		{param isDisabled: $isDisabled /}
		{param fieldWidth: 'long' /}
	{/call}
	{call aui.form.textField}
		{param id: 'test-values-directory' /}
		{param labelContent: 'Test values directory' /}
		{param value: $configuration.testValuesDirectory /}
		{param isRequired: true /}
		{param isDisabled: $isDisabled /}
	{/call}
	{call aui.form.radioField}
		{param id: 'template-mode' /}
		{param legendContent: 'Template mode' /}
		{param fields: [
			[ 'id': 'template-mode-separate-files', 'labelText': 'Separate files', 'value': 'SEPARATE_FILES', 'isChecked': $configuration.templateMode == 'SEPARATE_FILES', 'isDisabled': $isDisabled ],
			[ 'id': 'template-mode-single-files', 'labelText': 'Single files', 'value': 'SINGLE_FILE', 'isChecked': $configuration.templateMode == 'SINGLE_FILE', 'isDisabled': $isDisabled ],
			[ 'id': 'template-mode-both', 'labelText': 'Both', 'value': 'BOTH', 'isChecked': $configuration.templateMode == 'BOTH', 'isDisabled': $isDisabled ]
		] /}
		{param isRequired: true /}
	{/call}
	{call aui.form.buttons}
		{param content}
			{call aui.form.submit}
				{param text: 'Save' /}
			{/call}
			{call aui.form.linkButton}
				{param text: 'Cancel' /}
				{param href: '#' /}
			{/call}
		{/param}
	{/call}
{/template}
